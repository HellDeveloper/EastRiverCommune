<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Swell</name>
    </assembly>
    <members>
        <member name="T:Swell.Core.EConvertType">
            <summary>
            
            </summary>
            <summary>
            类型转换工具类
            </summary>
        </member>
        <member name="M:Swell.Core.EConvertType.GetBytes(System.Int16)">
            <summary>  转换为字节数组
            </summary>
            <param name="value"></param>
            <returns>字节数组</returns>
        </member>
        <member name="M:Swell.Core.EConvertType.ToShort(System.Byte[],System.Int32)">
            <summary> 由字节数组中指定的位置转换
            </summary>
            <param name="bytes">字节数组</param>
            <param name="startIndex">开始的位置</param>
            <returns></returns>
        </member>
        <member name="M:Swell.Core.EConvertType.GetBytes(System.Int32)">
            <summary>  转换为字节数组
            </summary>
            <param name="value"></param>
            <returns>字节数组</returns>
        </member>
        <member name="M:Swell.Core.EConvertType.ToInt(System.Byte[],System.Int32)">
            <summary> 由字节数组中指定的位置转换
            </summary>
            <param name="bytes">字节数组</param>
            <param name="startIndex">开始的位置</param>
            <returns></returns>
        </member>
        <member name="M:Swell.Core.EConvertType.GetBytes(System.Int64)">
            <summary>  转换为字节数组
            </summary>
            <param name="value"></param>
            <returns>字节数组</returns>
        </member>
        <member name="M:Swell.Core.EConvertType.ToLong(System.Byte[],System.Int32)">
            <summary> 由字节数组中指定的位置转换
            </summary>
            <param name="bytes">字节数组</param>
            <param name="startIndex">开始的位置</param>
            <returns></returns>
        </member>
        <member name="M:Swell.Core.EConvertType.GetBytes(System.UInt16)">
            <summary>  转换为字节数组
            </summary>
            <param name="value"></param>
            <returns>字节数组</returns>
        </member>
        <member name="M:Swell.Core.EConvertType.ToUShort(System.Byte[],System.Int32)">
            <summary> 由字节数组中指定的位置转换
            </summary>
            <param name="bytes">字节数组</param>
            <param name="startIndex">开始的位置</param>
            <returns></returns>
        </member>
        <member name="M:Swell.Core.EConvertType.GetBytes(System.UInt32)">
            <summary>  转换为字节数组
            </summary>
            <param name="value"></param>
            <returns>字节数组</returns>
        </member>
        <member name="M:Swell.Core.EConvertType.ToUInt(System.Byte[],System.Int32)">
            <summary> 由字节数组中指定的位置转换
            </summary>
            <param name="bytes">字节数组</param>
            <param name="startIndex">开始的位置</param>
            <returns></returns>
        </member>
        <member name="M:Swell.Core.EConvertType.GetBytes(System.UInt64)">
            <summary>  转换为字节数组
            </summary>
            <param name="value"></param>
            <returns>字节数组</returns>
        </member>
        <member name="M:Swell.Core.EConvertType.ToULong(System.Byte[],System.Int32)">
            <summary> 由字节数组中指定的位置转换
            </summary>
            <param name="bytes">字节数组</param>
            <param name="startIndex">开始的位置</param>
            <returns></returns>
        </member>
        <member name="M:Swell.Core.EConvertType.GetBytes(System.Single)">
            <summary>  转换为字节数组
            </summary>
            <param name="value"></param>
            <returns>字节数组</returns>
        </member>
        <member name="M:Swell.Core.EConvertType.ToFloat(System.Byte[],System.Int32)">
            <summary> 由字节数组中指定的位置转换
            </summary>
            <param name="bytes">字节数组</param>
            <param name="startIndex">开始的位置</param>
            <returns></returns>
        </member>
        <member name="M:Swell.Core.EConvertType.GetBytes(System.Double)">
            <summary>  转换为字节数组
            </summary>
            <param name="value"></param>
            <returns>字节数组</returns>
        </member>
        <member name="M:Swell.Core.EConvertType.ToDouble(System.Byte[],System.Int32)">
            <summary> 由字节数组中指定的位置转换
            </summary>
            <param name="bytes">字节数组</param>
            <param name="startIndex">开始的位置</param>
            <returns></returns>
        </member>
        <member name="M:Swell.Core.EConvertType.GetBytes(System.Char)">
            <summary>  转换为字节数组
            </summary>
            <param name="value"></param>
            <returns>字节数组</returns>
        </member>
        <member name="M:Swell.Core.EConvertType.ToChar(System.Byte[],System.Int32)">
            <summary> 由字节数组中指定的位置转换
            </summary>
            <param name="bytes">字节数组</param>
            <param name="startIndex">开始的位置</param>
            <returns></returns>
        </member>
        <member name="M:Swell.Core.EConvertType.GetBytes(System.Boolean)">
            <summary>  转换为字节数组
            </summary>
            <param name="value"></param>
            <returns>字节数组</returns>
        </member>
        <member name="M:Swell.Core.EConvertType.ToBool(System.Byte[],System.Int32)">
            <summary> 由字节数组中指定的位置转换
            </summary>
            <param name="bytes">字节数组</param>
            <param name="startIndex">开始的位置</param>
            <returns></returns>
        </member>
        <member name="M:Swell.Core.EConvertType.GetBytes(System.String,System.Text.Encoding)">
            <summary> 转换为字节数组
            </summary>
            <param name="value"></param>
            <param name="encoding">编码方式（如果为null，使用System.Text.Encoding.Unicode）</param>
            <returns>字节数组</returns>
        </member>
        <member name="M:Swell.Core.EConvertType.ToString(System.Byte[],System.Text.Encoding)">
            <summary> 由字节数组中指定的位置转换
            </summary>
            <param name="bytes">字节数组</param>
            <param name="encoding">编码方式（如果为null，使用System.Text.Encoding.Unicode）</param>
            <returns></returns>
        </member>
        <member name="M:Swell.Core.EConvertType.ToBase64String(System.Byte[],System.Base64FormattingOptions)">
            <summary> 将 8 位无符号整数的数组转换为其用 Base64 数字编码的等效字符串表示形式
            </summary>
            <param name="bytes">一个 8 位无符号整数数组</param>
            <param name="option">如果每 76 个字符插入一个分行符，则使用 InsertLineBreaks，如果不插入分行符，则使用 None</param>
            <returns></returns>
        </member>
        <member name="M:Swell.Core.EConvertType.ToBase64String(System.Byte[],System.Int32,System.Int32,System.Base64FormattingOptions)">
            <summary> 将 8 位无符号整数的数组转换为其用 Base64 数字编码的等效字符串表示形式
            </summary>
            <param name="bytes">一个 8 位无符号整数数组</param>
            <param name="offset">bytes 数组中的偏移量</param>
            <param name="length">要转换的 bytes 的元素数</param>
            <param name="option">如果每 76 个字符插入一个分行符，则使用 InsertLineBreaks，如果不插入分行符，则使用 None</param>
            <returns></returns>
        </member>
        <member name="M:Swell.Core.EConvertType.TryToShort(System.Object)">
            <summary>
            </summary>
            <param name="obj"></param>
            <returns>转换失败返回null</returns>
        </member>
        <member name="M:Swell.Core.EConvertType.TryToShort(System.String)">
            <summary>
            </summary>
            <param name="str"></param>
            <returns>转换失败返回null</returns>
        </member>
        <member name="M:Swell.Core.EConvertType.TryToInt(System.Object)">
            <summary>
            </summary>
            <param name="obj"></param>
            <returns>转换失败返回null</returns>
        </member>
        <member name="M:Swell.Core.EConvertType.TryToInt(System.String)">
            <summary>
            </summary>
            <param name="str"></param>
            <returns>转换失败返回null</returns>
        </member>
        <member name="M:Swell.Core.EConvertType.TryToLong(System.Object)">
            <summary>
            </summary>
            <param name="obj"></param>
            <returns>转换失败返回null</returns>
        </member>
        <member name="M:Swell.Core.EConvertType.TryToLong(System.String)">
            <summary>
            </summary>
            <param name="str"></param>
            <returns>转换失败返回null</returns>
        </member>
        <member name="M:Swell.Core.EConvertType.TryToUShort(System.Object)">
            <summary>
            </summary>
            <param name="obj"></param>
            <returns>转换失败返回null</returns>
        </member>
        <member name="M:Swell.Core.EConvertType.TryToUShort(System.String)">
            <summary>
            </summary>
            <param name="str"></param>
            <returns>转换失败返回null</returns>
        </member>
        <member name="M:Swell.Core.EConvertType.TryToUInt(System.Object)">
            <summary>
            </summary>
            <param name="obj"></param>
            <returns>转换失败返回null</returns>
        </member>
        <member name="M:Swell.Core.EConvertType.TryToUInt(System.String)">
            <summary>
            </summary>
            <param name="str"></param>
            <returns>转换失败返回null</returns>
        </member>
        <member name="M:Swell.Core.EConvertType.TryToULong(System.Object)">
            <summary>
            </summary>
            <param name="obj"></param>
            <returns>转换失败返回null</returns>
        </member>
        <member name="M:Swell.Core.EConvertType.TryToULong(System.String)">
            <summary>
            </summary>
            <param name="str"></param>
            <returns>转换失败返回null</returns>
        </member>
        <member name="M:Swell.Core.EConvertType.TryToFloat(System.Object)">
            <summary>
            </summary>
            <param name="obj"></param>
            <returns>转换失败返回null</returns>
        </member>
        <member name="M:Swell.Core.EConvertType.TryToFloat(System.String)">
            <summary>
            </summary>
            <param name="str"></param>
            <returns>转换失败返回null</returns>
        </member>
        <member name="M:Swell.Core.EConvertType.TryToDouble(System.Object)">
            <summary>
            </summary>
            <param name="obj"></param>
            <returns>转换失败返回null</returns>
        </member>
        <member name="M:Swell.Core.EConvertType.TryToDouble(System.String)">
            <summary>
            </summary>
            <param name="str"></param>
            <returns>转换失败返回null</returns>
        </member>
        <member name="M:Swell.Core.EConvertType.TryToDecimal(System.Object)">
            <summary>
            </summary>
            <param name="obj"></param>
            <returns>转换失败返回null</returns>
        </member>
        <member name="M:Swell.Core.EConvertType.TryToDecimal(System.String)">
            <summary>
            </summary>
            <param name="str"></param>
            <returns>转换失败返回null</returns>
        </member>
        <member name="M:Swell.Core.EConvertType.TryToChar(System.Object)">
            <summary>
            </summary>
            <param name="obj"></param>
            <returns>转换失败返回null</returns>
        </member>
        <member name="M:Swell.Core.EConvertType.TryToChar(System.String)">
            <summary>
            </summary>
            <param name="str"></param>
            <returns>转换失败返回null</returns>
        </member>
        <member name="M:Swell.Core.EConvertType.TryToBool(System.Object)">
            <summary>
            </summary>
            <param name="obj"></param>
            <returns>转换失败返回null</returns>
        </member>
        <member name="M:Swell.Core.EConvertType.TryToBool(System.String)">
            <summary>
            </summary>
            <param name="str"></param>
            <returns>转换失败返回null</returns>
        </member>
        <member name="M:Swell.Core.EConvertType.TryToDateTime(System.Object)">
            <summary>
            </summary>
            <param name="obj"></param>
            <returns>转换失败返回null</returns>
        </member>
        <member name="M:Swell.Core.EConvertType.TryToDateTime(System.String)">
            <summary>
            </summary>
            <param name="str"></param>
            <returns>转换失败返回null</returns>
        </member>
        <member name="M:Swell.Core.EConvertType.TryToString``1(``0)">
            <summary>
            retrun t == null ?  String.Empty : t.ToString();
            </summary>
            <typeparam name="T"></typeparam>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="T:Swell.Core.IO">
            <summary>
            
            </summary>
        </member>
        <member name="T:Swell.Core.MongoID">
            <summary>
            MongoDB 生成 唯一 的 ID
            </summary>
        </member>
        <member name="M:Swell.Core.MongoID.#ctor">
            <summary>
              Initializes a new instance of the <see cref="T:Swell.Core.MongoID"/> class.
            </summary>
        </member>
        <member name="M:Swell.Core.MongoID.generate">
            <summary>
              Generates this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Swell.Core.MongoID.Generate">
            <summary>
            生成
            </summary>
            <returns></returns>
        </member>
        <member name="M:Swell.Core.MongoID.GenerateTime">
            <summary>
              Generates the time.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Swell.Core.MongoID.GenerateInc">
            <summary>
              Generates the inc.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Swell.Core.MongoID.GenerateConstants">
            <summary> Generates the constants.
            </summary>
        </member>
        <member name="M:Swell.Core.MongoID.GenerateProcId">
            <summary>
              Generates the proc id.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Swell.Core.Security">
            <summary>
            
            </summary>
        </member>
        <member name="M:Swell.Core.Security.MD5Encrypt(System.String)">
            <summary>
            不可逆
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.Core.Security.SHA1Encrypt(System.String)">
            <summary>
            不可逆
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.Core.Security.SHA256Encrypt(System.String)">
            <summary>
            不可逆
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.Core.Security.SHA384Encrypt(System.String)">
            <summary>
            不可逆
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.Core.Security.SHA512Encrypt(System.String)">
            <summary>
            不可逆
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.Core.Security.AesEncrypt(System.String,System.Byte[],System.Byte[])">
            <summary>
            对称
            </summary>
            <param name="plainText"></param>
            <param name="key"></param>
            <param name="iv"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.Core.Security.AesDecrypt(System.Byte[],System.Byte[],System.Byte[])">
            <summary>
            对称加密
            </summary>
            <param name="cipherText"></param>
            <param name="key"></param>
            <param name="iv"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.Core.Security.DesEncrypt(System.String,System.Byte[],System.Byte[])">
            <summary>
            
            </summary>
            <param name="plainText"></param>
            <param name="key"></param>
            <param name="iv"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.Core.Security.DesDecrypt(System.Byte[],System.Byte[],System.Byte[])">
            <summary>
            
            </summary>
            <param name="cipherText"></param>
            <param name="key"></param>
            <param name="iv"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.Core.Security.RSAKey(System.String@,System.String@)">
            <summary>
            RSA 的密钥产生，产生私钥和公钥
            </summary>
            <param name="xmlPrivateKey">私钥（解密）</param>
            <param name="xmlPublicKey">公钥（加密）</param>
        </member>
        <member name="M:Swell.Core.Security.RSAEncrypt(System.String,System.String)">
            <summary>
            RSA加密算法比较耗时
            </summary>
            <param name="xmlPublicKey"></param>
            <param name="m_strEncryptString"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.Core.Security.RSADecrypt(System.String,System.Byte[])">
            <summary>
            RSA加密算法比较耗时
            </summary>
            <param name="xmlPrivateKey"></param>
            <param name="DecryptString"></param>
            <returns></returns>
        </member>
        <member name="T:Swell.Data.DataParameter">
            <summary> 参数
            </summary>
        </member>
        <member name="M:Swell.Data.DataParameter.#ctor">
            <summary> 初始化实例
            </summary>
        </member>
        <member name="M:Swell.Data.DataParameter.#ctor(System.String,System.Object,System.String)">
            <summary> 初始化实例
            </summary>
            <param name="parameterName"></param>
            <param name="value"></param>
            <param name="sourceColumn"></param>
        </member>
        <member name="M:Swell.Data.DataParameter.ConvertTo``1">
            <summary> 转换为其它的 Parameter
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Swell.Data.DataParameter.Equals(System.Object)">
            <summary> 不区分大小写比较 ParameterName
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.Data.DataParameter.GetHashCode">
            <summary> Base 的 Hash 算法
            </summary>
            <returns></returns>
        </member>
        <member name="M:Swell.Data.DataParameter.ToString">
            <summary> 返回 ParameterName
            </summary>
            <returns></returns>
        </member>
        <member name="M:Swell.Data.DataParameter.op_Equality(Swell.Data.DataParameter,System.Object)">
            <summary> 不区分大小写比较 ParameterName
            </summary>
            <param name="param1"></param>
            <param name="param2"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.Data.DataParameter.op_Inequality(Swell.Data.DataParameter,System.Object)">
            <summary> 不区分大小写比较 ParameterName
            </summary>
            <param name="param1"></param>
            <param name="param2"></param>
            <returns></returns>
        </member>
        <member name="P:Swell.Data.DataParameter.DbType">
            <summary> 获取或设置参数的 System.Data.DbType
            </summary>
        </member>
        <member name="P:Swell.Data.DataParameter.Direction">
            <summary> 获取或设置一个值，该值指示参数是只可输入、只可输出、双向还是存储过程返回值参数
            </summary>
        </member>
        <member name="P:Swell.Data.DataParameter.IsNullable">
            <summary> 获取一个值，该值指示参数是否接受 null 值
            </summary>
        </member>
        <member name="P:Swell.Data.DataParameter.ParameterName">
            <summary> 获取或设置 System.Data.IDataParameter 的名称
            </summary>
        </member>
        <member name="P:Swell.Data.DataParameter.SourceVersion">
            <summary>  Value 值的状态
            </summary>
        </member>
        <member name="P:Swell.Data.DataParameter.Value">
            <summary> 获取或设置该参数的值
            </summary>
        </member>
        <member name="P:Swell.Data.DataParameter.SourceColumn">
            <summary> 获取或设置源列的名称 + 比较运算符
            </summary>
        </member>
        <member name="T:Swell.Data.EDataTable">
            <summary> System.Data.DataTable, System.Data.DataColumnCollection 的扩展
            </summary>
        </member>
        <member name="M:Swell.Data.EDataTable.TryAdd(System.Data.DataColumnCollection,System.String,System.Type)">
            <summary> 尝试添加新列名，如果当前列集合包含此名，就不添加返回false
            </summary>
            <param name="columns">列集合</param>
            <param name="name">要添加的列名</param>
            <param name="type">类型为null是typeof(string)</param>
            <returns>添加是否成功</returns>
        </member>
        <member name="T:Swell.Data.DbSqlServer">
            <summary>
            数据库 Sql Server
            </summary>
        </member>
        <member name="T:Swell.Data.TDbConnection`1">
            <summary> 关系型数据库连接对象
            </summary>
        </member>
        <member name="T:Swell.Data.TDbConnection">
            <summary> 关系型数据库连接对象
            </summary>
            <summary> 关系型数据库连接对象
            </summary>
            <summary> 关系型数据库连接对象
            </summary>
            <summary> 关系型数据库连接对象
            </summary>
            <summary> 关系型数据库连接对象
            </summary>
            <summary> 关系型数据库连接对象
            </summary>
            <summary> 关系型数据库连接对象
            </summary>
        </member>
        <member name="M:Swell.Data.TDbConnection.add_parameter(System.Data.IDbCommand,System.Type,System.Collections.Generic.IEnumerable{System.Object},System.Collections.Generic.Dictionary{System.Data.IDataParameter,System.Data.IDataParameter})">
            <summary> 
            </summary>
            <param name="cmd"></param>
            <param name="args"></param>
            <param name="param_type">Parameter 的实例类型</param>
            <param name="neq_inputs">parameter的方向不等于 ParameterDirection.Input</param>
        </member>
        <member name="M:Swell.Data.TDbConnection.add_parameter(System.Data.IDbCommand,System.Type,System.Data.IDataParameter,System.Collections.Generic.Dictionary{System.Data.IDataParameter,System.Data.IDataParameter})">
            <summary> 
            </summary>
            <param name="cmd"></param>
            <param name="param"></param>
            <param name="param_type">Parameter 的实例类型</param>
            <param name="neq_inputs">parameter的方向不等于 ParameterDirection.Input</param>
        </member>
        <member name="M:Swell.Data.TDbConnection.non_query(System.Data.IDbCommand,System.Object)">
            <summary> 执行 ExecuteNonQuery
            </summary>
            <param name="cmd"></param>
            <param name="o"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.Data.TDbConnection.scalar(System.Data.IDbCommand,System.Object)">
            <summary> 执行 ExecuteScalar()
            </summary>
            <param name="cmd"></param>
            <param name="o"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.Data.TDbConnection.reader(System.Data.IDbCommand,System.Data.CommandBehavior)">
            <summary> 执行 ExecuteReader(behavior)
            </summary>
            <param name="cmd"></param>
            <param name="behavior"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.Data.TDbConnection.clear_neq_input(System.Collections.Generic.Dictionary{System.Data.IDataParameter,System.Data.IDataParameter})">
            <summary> 清除
            </summary>
            <param name="neq_inputs">parameter的方向不等于 ParameterDirection.Input</param>
        </member>
        <member name="M:Swell.Data.TDbConnection.IDataReaderToDataTable(System.Data.IDataReader)">
            <summary> IDataReader 转 DataTable 
            </summary>
            <param name="reader"></param>
            <returns></returns>
        </member>
        <member name="F:Swell.Data.TDbConnection._db_connection">
            <summary> 关系型数据库连接对象
            </summary>
        </member>
        <member name="M:Swell.Data.TDbConnection.#ctor(System.Data.IDbConnection)">
            <summary> 构造函数
            </summary>
            <param name="conn">关系型数据库连接对象</param>
        </member>
        <member name="M:Swell.Data.TDbConnection.BeginTransaction(System.Data.IsolationLevel)">
            <summary> 开始数据库事务
            </summary>
            <param name="il">连接的事务锁定行为</param>
            <returns>新事务的对象</returns>
        </member>
        <member name="M:Swell.Data.TDbConnection.BeginTransaction">
            <summary> 开始数据库事务
            </summary>
            <returns>新事务的对象</returns>
        </member>
        <member name="M:Swell.Data.TDbConnection.ChangeDatabase(System.String)">
            <summary> 更改当前数据库
            </summary>
            <param name="databaseName">要代替当前数据库进行使用的数据库的名称</param>
        </member>
        <member name="M:Swell.Data.TDbConnection.System#Data#IDbConnection#Close">
            <summary> 关闭数据库的连接
            </summary>
        </member>
        <member name="M:Swell.Data.TDbConnection.Close">
            <summary> 关闭数据库的连接
            </summary>
            <returns>是否关闭状态</returns>
        </member>
        <member name="M:Swell.Data.TDbConnection.CreateCommand">
            <summary> 创建并返回一个与该连接相关联的 Command 对象
            </summary>
            <returns>一个与该连接相关联的 Command 对象</returns>
        </member>
        <member name="M:Swell.Data.TDbConnection.CreateCommand(System.String)">
            <summary> 创建并返回一个与该连接相关联的 Command 对象
            </summary>
            <param name="commandText"></param>
            <returns>一个与该连接相关联的 Command 对象</returns>
        </member>
        <member name="M:Swell.Data.TDbConnection.System#Data#IDbConnection#Open">
            <summary> 打开一个数据库连接，由 ConnectionString 属性指定
            </summary>
        </member>
        <member name="M:Swell.Data.TDbConnection.Open">
            <summary> 打开一个数据库连接，由 ConnectionString 属性指定
            </summary>
            <returns>是否打开状态</returns>
        </member>
        <member name="M:Swell.Data.TDbConnection.Dispose">
            <summary> 执行与释放或重置非托管资源相关的应用程序定义的任务
            </summary>
        </member>
        <member name="M:Swell.Data.TDbConnection.run``2(System.String,System.Collections.Generic.IEnumerable{System.Object},System.Action{System.Data.IDbCommand,System.Collections.Generic.IEnumerable{System.Object},System.Collections.Generic.Dictionary{System.Data.IDataParameter,System.Data.IDataParameter}},System.Func{System.Data.IDbCommand,``1,``0},``1)">
            <summary> 核心方法，主要针对 ExecuteNonQuery 和 ExecuteScalar
            </summary>
            <typeparam name="Result"></typeparam>
            <typeparam name="Data"></typeparam>
            <param name="sql"></param>
            <param name="args"></param>
            <param name="init_command"></param>
            <param name="fun"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.Data.TDbConnection.run``1(System.String,System.Collections.Generic.IEnumerable{System.Object},System.Action{System.Data.IDbCommand,System.Collections.Generic.IEnumerable{System.Object},System.Collections.Generic.Dictionary{System.Data.IDataParameter,System.Data.IDataParameter}},System.Func{System.Data.IDataReader,``0})">
            <summary> 核心方法，主要针对 ExecuteReader
            </summary>
            <typeparam name="Result">返回结果类型</typeparam>
            <param name="sql">执行文本</param>
            <param name="args"></param>
            <param name="init_command"></param>
            <param name="func"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.Data.TDbConnection.execute``2(System.String,System.Collections.Generic.IEnumerable{System.Object},System.Func{System.Data.IDbCommand,``1,``0},``1)">
            <summary>
            
            </summary>
            <typeparam name="Result"></typeparam>
            <typeparam name="Data"></typeparam>
            <param name="sql"></param>
            <param name="args"></param>
            <param name="func"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.Data.TDbConnection.execute``1(System.String,System.Collections.Generic.IEnumerable{System.Object},System.Func{System.Data.IDataReader,``0})">
            <summary>
            
            </summary>
            <typeparam name="Result"></typeparam>
            <param name="sql"></param>
            <param name="args"></param>
            <param name="func"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.Data.TDbConnection.number``2(System.String,System.Collections.Generic.IEnumerable{System.Object},System.Func{System.Data.IDbCommand,``1,``0},``1)">
            <summary>
            
            </summary>
            <typeparam name="Result"></typeparam>
            <typeparam name="Data"></typeparam>
            <param name="sql"></param>
            <param name="args"></param>
            <param name="func"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.Data.TDbConnection.number``1(System.String,System.Collections.Generic.IEnumerable{System.Object},System.Func{System.Data.IDataReader,``0})">
            <summary>
            
            </summary>
            <typeparam name="Result"></typeparam>
            <param name="sql"></param>
            <param name="args"></param>
            <param name="func"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.Data.TDbConnection.init_execute_command(System.Data.IDbCommand,System.Collections.Generic.IEnumerable{System.Object},System.Collections.Generic.Dictionary{System.Data.IDataParameter,System.Data.IDataParameter})">
            <summary> 
            </summary>
            <param name="cmd"></param>
            <param name="args"></param>
            <param name="neq_inputs">parameter的方向不等于 ParameterDirection.Input</param>
            <returns></returns>
        </member>
        <member name="M:Swell.Data.TDbConnection.init_number_command(System.Data.IDbCommand,System.Collections.Generic.IEnumerable{System.Object},System.Collections.Generic.Dictionary{System.Data.IDataParameter,System.Data.IDataParameter})">
            <summary> 
            </summary>
            <param name="cmd"></param>
            <param name="args"></param>
            <param name="neq_inputs">parameter的方向不等于 ParameterDirection.Input</param>
            <returns></returns>
        </member>
        <member name="M:Swell.Data.TDbConnection.ExecuteNonQuery(System.String,System.Collections.Generic.IEnumerable{System.Data.IDataParameter})">
            <summary> 
            </summary>
            <param name="sql"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.Data.TDbConnection.ExecuteNonQuery(System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{System.Data.IDataParameter}})">
            <summary>
            </summary>
            <param name="sql"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.Data.TDbConnection.ExecuteNonQuery(System.String,System.Data.IDataParameter[])">
            <summary>
            </summary>
            <param name="sql"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.Data.TDbConnection.ExecuteScalar(System.String,System.Collections.Generic.IEnumerable{System.Data.IDataParameter})">
            <summary>
            </summary>
            <param name="sql"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.Data.TDbConnection.ExecuteScalar(System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{System.Data.IDataParameter}})">
            <summary>
            </summary>
            <param name="sql"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.Data.TDbConnection.ExecuteScalar(System.String,System.Data.IDataParameter[])">
            <summary>
            </summary>
            <param name="sql"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.Data.TDbConnection.ExecuteReader(System.String,System.Collections.Generic.IEnumerable{System.Data.IDataParameter},System.Data.CommandBehavior)">
            <summary>
            </summary>
            <param name="sql"></param>
            <param name="args"></param>
            <param name="behavior"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.Data.TDbConnection.ExecuteReader(System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{System.Data.IDataParameter}},System.Data.CommandBehavior)">
            <summary>
            </summary>
            <param name="sql"></param>
            <param name="args"></param>
            <param name="behavior"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.Data.TDbConnection.ExecuteReader(System.String,System.Data.CommandBehavior,System.Data.IDataParameter[])">
            <summary>
            </summary>
            <param name="sql"></param>
            <param name="behavior"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.Data.TDbConnection.ExecuteReader``1(System.String,System.Collections.Generic.IEnumerable{System.Data.IDataParameter},System.Func{System.Data.IDataReader,``0})">
            <summary> 
            </summary>
            <typeparam name="Result"></typeparam>
            <param name="sql"></param>
            <param name="args"></param>
            <param name="func"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.Data.TDbConnection.ExecuteReader``1(System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{System.Data.IDataParameter}},System.Func{System.Data.IDataReader,``0})">
            <summary>
            </summary>
            <typeparam name="Result"></typeparam>
            <param name="sql"></param>
            <param name="args"></param>
            <param name="func"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.Data.TDbConnection.ExecuteReader``1(System.String,System.Func{System.Data.IDataReader,``0},System.Data.IDataParameter[])">
            <summary>
            </summary>
            <typeparam name="Result"></typeparam>
            <param name="sql"></param>
            <param name="func"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.Data.TDbConnection.ExecuteDataTable(System.String,System.Collections.Generic.IEnumerable{System.Data.IDataParameter})">
            <summary>
            </summary>
            <param name="sql"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.Data.TDbConnection.ExecuteDataTable(System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{System.Data.IDataParameter}})">
            <summary>
            </summary>
            <param name="sql"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.Data.TDbConnection.ExecuteDataTable(System.String,System.Data.IDataParameter[])">
            <summary>
            </summary>
            <param name="sql"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.Data.TDbConnection.NumberNonQuery(System.String,System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            </summary>
            <param name="sql"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.Data.TDbConnection.NumberNonQuery(System.String,System.Object[])">
            <summary>
            </summary>
            <param name="sql"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.Data.TDbConnection.NumberScalar(System.String,System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            </summary>
            <param name="sql"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.Data.TDbConnection.NumberScalar(System.String,System.Object[])">
            <summary>
            </summary>
            <param name="sql"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.Data.TDbConnection.NumberReader(System.String,System.Collections.Generic.IEnumerable{System.Object},System.Data.CommandBehavior)">
            <summary>
            </summary>
            <param name="sql"></param>
            <param name="args"></param>
            <param name="behavior"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.Data.TDbConnection.NumberReader(System.String,System.Data.CommandBehavior,System.Object[])">
            <summary>
            </summary>
            <param name="sql"></param>
            <param name="behavior"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.Data.TDbConnection.NumberReader``1(System.String,System.Collections.Generic.IEnumerable{System.Object},System.Func{System.Data.IDataReader,``0})">
            <summary>
            </summary>
            <typeparam name="Result"></typeparam>
            <param name="sql"></param>
            <param name="args"></param>
            <param name="func"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.Data.TDbConnection.NumberReader``1(System.String,System.Func{System.Data.IDataReader,``0},System.Object[])">
            <summary>
            </summary>
            <typeparam name="Result"></typeparam>
            <param name="sql"></param>
            <param name="func"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.Data.TDbConnection.NumberDataTable(System.String,System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            </summary>
            <param name="sql"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.Data.TDbConnection.NumberDataTable(System.String,System.Object[])">
            <summary>
            </summary>
            <param name="sql"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.Data.TDbConnection.GetConditionSql(System.Data.IDataParameter)">
            <summary>
            条件
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.Data.TDbConnection.GetConditionSql(System.Collections.Generic.IEnumerable{System.Data.IDataParameter})">
            <summary>
            条件AND
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.Data.TDbConnection.GetConditionSql(System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{System.Data.IDataParameter}})">
            <summary>
            条件OR
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.Data.TDbConnection.GetInsertSql(System.String,System.Collections.Generic.IEnumerable{System.Data.IDataParameter})">
            <summary>
            插入
            </summary>
            <param name="args"></param>
            <param name="table_name"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.Data.TDbConnection.GetUpdateSql(System.String,System.Collections.Generic.IEnumerable{System.Data.IDataParameter},System.Collections.Generic.IEnumerable{System.Data.IDataParameter})">
            <summary>
            更新
            </summary>
            <param name="sets">设置</param>
            <param name="where">条件</param>
            <param name="table_name">表名</param>
            <returns></returns>
        </member>
        <member name="M:Swell.Data.TDbConnection.GetDeleteSql(System.String,System.Collections.Generic.IEnumerable{System.Data.IDataParameter})">
            <summary>
            删除
            </summary>
            <param name="where"></param>
            <param name="table_name"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.Data.TDbConnection.GetSelectSql(System.String,System.Collections.Generic.IEnumerable{System.Data.IDataParameter},System.String)">
            <summary>
            构建查询SQL
            </summary>
            <param name="args">where 条件</param>
            <param name="table_naem">表名</param>
            <param name="fieldname">查询的字段名(如果是String.Empty || null 就是 *)</param>
            <returns>SELECT语句</returns>
        </member>
        <member name="M:Swell.Data.TDbConnection.BuildConditionSql(System.Data.IDataParameter)">
            <summary>
            
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.Data.TDbConnection.BuildConditionSql(System.Collections.Generic.IEnumerable{System.Data.IDataParameter})">
            <summary>
            AND
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.Data.TDbConnection.BuildConditionSql(System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{System.Data.IDataParameter}})">
            <summary>
            OR
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.Data.TDbConnection.BuildInsertSql(System.String,System.Collections.Generic.IEnumerable{System.Data.IDataParameter})">
            <summary>
            
            </summary>
            <param name="args"></param>
            <param name="table_name"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.Data.TDbConnection.BuildUpdateSql(System.String,System.Collections.Generic.IEnumerable{System.Data.IDataParameter},System.Collections.Generic.IEnumerable{System.Data.IDataParameter})">
            <summary>
            
            </summary>
            <param name="args"></param>
            <param name="table_name"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.Data.TDbConnection.BuildUpdateSql(System.String,System.Collections.Generic.IEnumerable{System.Data.IDataParameter},System.String)">
            <summary>
            
            </summary>
            <param name="args"></param>
            <param name="table_name"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.Data.TDbConnection.BuildDeleteSql(System.String,System.Collections.Generic.IEnumerable{System.Data.IDataParameter})">
            <summary>
            构建删除的SQL语句
            </summary>
            <param name="args"></param>
            <param name="table_name">表名</param>
            <returns>SQL语句</returns>
        </member>
        <member name="M:Swell.Data.TDbConnection.BuildSelectSql(System.String,System.Collections.Generic.IEnumerable{System.Data.IDataParameter},System.String)">
            <summary>
            构建查询SQL
            </summary>
            <param name="args">where 条件</param>
            <param name="table_name">表名</param>
            <param name="fieldname">查询的字段名(如果是String.Empty || null 就是 *)</param>
            <returns>SELECT语句</returns>
        </member>
        <member name="M:Swell.Data.TDbConnection.CreateDataParameter">
            <summary> 创建参数
            </summary>
            <returns></returns>
        </member>
        <member name="P:Swell.Data.TDbConnection.ConnectionString">
            <summary> 获取或设置用于打开数据库的字符串
            </summary>
        </member>
        <member name="P:Swell.Data.TDbConnection.ConnectionTimeout">
            <summary> 获取在尝试建立连接时终止尝试并生成错误之前所等待的时间
            </summary>
        </member>
        <member name="P:Swell.Data.TDbConnection.Database">
            <summary> 获取当前数据库或连接打开后要使用的数据库的名称
            </summary>
        </member>
        <member name="P:Swell.Data.TDbConnection.State">
            <summary> 获取连接的当前状态
            </summary>
        </member>
        <member name="P:Swell.Data.TDbConnection.ParameterNamePrefix">
            <summary> 参数名称的前缀
            </summary>
        </member>
        <member name="P:Swell.Data.TDbConnection.MongoID">
            <summary> MongoDB 数据库生成唯一 ID 方式
            </summary>
        </member>
        <member name="M:Swell.Data.TDbConnection`1.#ctor">
            <summary> 构造函数
            </summary>
        </member>
        <member name="M:Swell.Data.TDbConnection`1.#ctor(System.String)">
            <summary> 
            </summary>
            <param name="connectionString"></param>
        </member>
        <member name="M:Swell.Data.DbSqlServer.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Swell.Data.DbSqlServer.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="connectionString"></param>
        </member>
        <member name="M:Swell.Data.DbSqlServer.LimitRowNumberSql(System.String,System.Int32,System.Int32,System.String)">
            <summary> 限制查询 (ROW_NUMBER）必须是SQL Server 2005 以上
            </summary>
            <param name="select_sql">查询的SQL语句</param>
            <param name="startIndex">开始的索引（从零开始）</param>
            <param name="count">拿多少条</param>
            <param name="orderBy">排序SQL语句（不需要写 order by 关键字）</param>
            <returns>新的查询语句</returns>
        </member>
        <member name="M:Swell.Data.DbSqlServer.LimitTopNotInSql(System.String,System.Int32,System.String,System.Int32)">
            <summary> 限制查询 (TOP NOT IN）最老版本
            </summary>
            <param name="select_sql">查询的SQL语句</param>
            <param name="startIndex">开始的索引（从零开始）</param>
            <param name="count">拿多少条</param>
            <param name="select_field">not in 的 字段</param>
            <returns>新的查询语句</returns>
        </member>
        <member name="M:Swell.Data.DbSqlServer.LimitSql(System.String,System.Int32,System.Int32,System.String)">
            <summary> 限制查询 (ROW_NUMBER）必须是SQL Server 2005 以上 
            </summary>
            <param name="select_sql">查询的SQL语句</param>
            <param name="startIndex">开始的索引（从零开始）</param>
            <param name="count">拿多少条</param>
            <param name="orderBy">排序SQL语句（不需要写 order by 关键字）</param>
            <returns>新的查询语句</returns>
        </member>
        <member name="M:Swell.Data.DbSqlServer.LimitSql(System.String,System.Int32,System.String,System.Int32)">
            <summary> 限制查询 (TOP NOT IN）最老版本
            </summary>
            <param name="select_sql">查询的SQL语句</param>
            <param name="startIndex">开始的索引（从零开始）</param>
            <param name="count">拿多少条</param>
            <param name="select_field">not in 的 字段</param>
            <returns>新的查询语句</returns>
        </member>
        <member name="T:Swell.Generic.Comparable`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Swell.Generic.Comparable`1.System#Collections#Generic#IComparer{T}#Compare(`0,`0)">
            <summary>
            比较两个对象并返回一个值，指示一个对象是小于、等于还是大于另一个对象
            </summary>
            <param name="x">要比较的第一个对象</param>
            <param name="y">要比较的第二个对象</param>
            <returns>-1:x&lt;y, 0:x==y, 1:x&gt;y; </returns>
        </member>
        <member name="T:Swell.Generic.Comparer`1">
            <summary>
            辅助
            </summary>
            <typeparam name="T">要比较的对象的类型</typeparam>
        </member>
        <member name="M:Swell.Generic.Comparer`1.#ctor(System.Func{`0,`0,System.Int32})">
            <summary>
            
            </summary>
            <param name="callback"></param>
        </member>
        <member name="M:Swell.Generic.Comparer`1.System#Collections#Generic#IComparer{T}#Compare(`0,`0)">
            <summary>
            比较两个对象并返回一个值，指示一个对象是小于、等于还是大于另一个对象
            </summary>
            <param name="x">要比较的第一个对象</param>
            <param name="y">要比较的第二个对象</param>
            <returns>-1:x&lt;y, 0:x==y, 1:x&gt;y; </returns>
        </member>
        <member name="P:Swell.Generic.Comparer`1.Callback">
            <summary>
            比较两个对象回调方法(CompareTo的实现方法)
            </summary>
        </member>
        <member name="T:Swell.Generic.ECollection">
            <summary>
            
            </summary>
        </member>
        <member name="M:Swell.Generic.ECollection.RemoveNull``1(System.Collections.Generic.ICollection{``0})">
            <summary>
            移除null元素
            </summary>
            <typeparam name="T"></typeparam>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.Generic.ECollection.RemoveBy``2(System.Collections.Generic.ICollection{``0},System.Func{``0,``1,System.Boolean},``1)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="D"></typeparam>
            <param name="collection"></param>
            <param name="func"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.Generic.ECollection.RemoveBy``3(System.Collections.Generic.ICollection{``0},System.Func{``0,``1,``2,System.Boolean},``1,``2)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="D0"></typeparam>
            <typeparam name="D1"></typeparam>
            <param name="collection"></param>
            <param name="func"></param>
            <param name="data0"></param>
            <param name="data1"></param>
            <returns></returns>
        </member>
        <member name="T:Swell.Generic.EEnumerable">
            <summary>
            
            </summary>
        </member>
        <member name="M:Swell.Generic.EEnumerable.OrderBy``1(System.Collections.Generic.IEnumerable{``0})">
            <summary> 升序排序 IComparable接口 CompareTo
            </summary>
            <typeparam name="TSource">实现IComparable接口</typeparam>
            <param name="source">排序的数据源</param>
            <returns></returns>
        </member>
        <member name="M:Swell.Generic.EEnumerable.OrderBy``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,System.Int32})">
            <summary> 升序排序
            </summary>
            <typeparam name="TSource"></typeparam>
            <param name="source">排序的数据源</param>
            <param name="callback"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.Generic.EEnumerable.OrderBy``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IComparer{``0})">
            <summary> 升序排序
            </summary>
            <typeparam name="TSource"></typeparam>
            <param name="source">排序的数据源</param>
            <param name="comparer"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.Generic.EEnumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,``1,System.Int32})">
            <summary> 升序排序
            </summary>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TKey"></typeparam>
            <param name="source">排序的数据源</param>
            <param name="keySelector"></param>
            <param name="callback"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.Generic.EEnumerable.OrderByDescending``1(System.Collections.Generic.IEnumerable{``0})">
            <summary> 降序排序 IComparable接口 CompareTo
            </summary>
            <typeparam name="TSource">实现IComparable接口</typeparam>
            <param name="source">排序的数据源</param>
            <returns></returns>
        </member>
        <member name="M:Swell.Generic.EEnumerable.OrderByDescending``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,System.Int32})">
            <summary> 降序排序
            </summary>
            <typeparam name="TSource"></typeparam>
            <param name="source">排序的数据源</param>
            <param name="callback"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.Generic.EEnumerable.OrderByDescending``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IComparer{``0})">
            <summary> 降序排序
            </summary>
            <typeparam name="TSource"></typeparam>
            <param name="source">排序的数据源</param>
            <param name="comparer"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.Generic.EEnumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,``1,System.Int32})">
            <summary> 降序排序
            </summary>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TKey"></typeparam>
            <param name="source">排序的数据源</param>
            <param name="keySelector"></param>
            <param name="callback"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.Generic.EEnumerable.ToStringBuilder``1(System.Collections.Generic.IEnumerable{``0},System.String)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="args"></param>
            <param name="separator"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.Generic.EEnumerable.ToStringBuilder``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.String)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="V"></typeparam>
            <param name="args"></param>
            <param name="func"></param>
            <param name="separator"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.Generic.EEnumerable.ToStringBuilder``2(System.Collections.Generic.IEnumerable{``0},System.Func{System.Int32,``0,``1},System.String)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="V"></typeparam>
            <param name="args"></param>
            <param name="func"></param>
            <param name="separator"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.Generic.EEnumerable.ToStringBuilder``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.String)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="K"></typeparam>
            <typeparam name="V"></typeparam>
            <param name="args"></param>
            <param name="func_key"></param>
            <param name="func_value"></param>
            <param name="separator"></param>
            <returns></returns>
        </member>
        <member name="T:Swell.Core.Assist">
            <summary>
            助手
            </summary>
        </member>
        <member name="F:Swell.Core.Assist.WHITE_SPACE">
            <summary>
            空格
            </summary>
        </member>
        <member name="F:Swell.Core.Assist.SEMICOLON">
            <summary> 分号
            </summary>
        </member>
        <member name="F:Swell.Core.Assist.ISO_DATETIME_FORMAT">
            <summary>
            yyyy-MM-dd HH:mm:ss
            </summary>
        </member>
        <member name="M:Swell.Core.Assist.#cctor">
            <summary>
            
            </summary>
        </member>
        <member name="F:Swell.Core.Assist._mongo_id">
            <summary>
            </summary>
        </member>
        <member name="M:Swell.Core.Assist.ReturnParameter``1(``0)">
            <summary> 返回参数
            </summary>
            <typeparam name="T"></typeparam>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.Core.Assist.CreateParameter``1">
            <summary> 创建泛型
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Swell.Core.Assist.Array``1(``0[])">
            <summary> 创建数组
            </summary>
            <typeparam name="T"></typeparam>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.Core.Assist.GetBeforeFirstWhiteSpace(System.String)">
            <summary>
            获取第一个空格前面的字符
            <param name="str"></param>
            <returns></returns>
            </summary>
        </member>
        <member name="M:Swell.Core.Assist.Replace(System.String,System.Char,System.Int32[])">
            <summary>
            
            </summary>
            <param name="str"></param>
            <param name="c"></param>
            <param name="indexes"></param>
        </member>
        <member name="M:Swell.Core.Assist.HostNameHash">
            <summary> 本地计算机的主机名 hash.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Swell.Core.Assist.ToOctonary(System.Int64,System.Int32)">
            <summary>
            
            </summary>
            <param name="i"></param>
            <param name="shift"></param>
            <returns></returns>
        </member>
        <member name="P:Swell.Core.Assist.Epoch">
            <summary> 1970-01-01 00:00:00 U
            </summary>
        </member>
        <member name="P:Swell.Core.Assist.MongoID">
            <summary> MongoDB 生成 唯一 的 ID （缺点：最大去到2070年左右）
            </summary>
        </member>
        <member name="T:Swell.Core.TypeTool">
            <summary>
            类型工具类
            </summary>
            <summary>
            类型工具类
            </summary>
        </member>
        <member name="M:Swell.Core.TypeTool.IsAll``2(System.Object)">
            <summary>
            类型判断
            </summary>
        </member>
        <member name="M:Swell.Core.TypeTool.IsAny``2(System.Object)">
            <summary>
            类型判断
            </summary>
        </member>
        <member name="M:Swell.Core.TypeTool.Is``2(System.Object,System.Boolean)">
            <summary>
            类型判断 true = and, false = any
            </summary>
        </member>
        <member name="M:Swell.Core.TypeTool.IsAll``3(System.Object)">
            <summary>
            类型判断
            </summary>
        </member>
        <member name="M:Swell.Core.TypeTool.IsAny``3(System.Object)">
            <summary>
            类型判断
            </summary>
        </member>
        <member name="M:Swell.Core.TypeTool.Is``3(System.Object,System.Boolean)">
            <summary>
            类型判断 true = and, false = any
            </summary>
        </member>
        <member name="M:Swell.Core.TypeTool.IsAll``4(System.Object)">
            <summary>
            类型判断
            </summary>
        </member>
        <member name="M:Swell.Core.TypeTool.IsAny``4(System.Object)">
            <summary>
            类型判断
            </summary>
        </member>
        <member name="M:Swell.Core.TypeTool.Is``4(System.Object,System.Boolean)">
            <summary>
            类型判断 true = and, false = any
            </summary>
        </member>
        <member name="M:Swell.Core.TypeTool.IsAll``5(System.Object)">
            <summary>
            类型判断
            </summary>
        </member>
        <member name="M:Swell.Core.TypeTool.IsAny``5(System.Object)">
            <summary>
            类型判断
            </summary>
        </member>
        <member name="M:Swell.Core.TypeTool.Is``5(System.Object,System.Boolean)">
            <summary>
            类型判断 true = and, false = any
            </summary>
        </member>
        <member name="M:Swell.Core.TypeTool.IsAll``6(System.Object)">
            <summary>
            类型判断
            </summary>
        </member>
        <member name="M:Swell.Core.TypeTool.IsAny``6(System.Object)">
            <summary>
            类型判断
            </summary>
        </member>
        <member name="M:Swell.Core.TypeTool.Is``6(System.Object,System.Boolean)">
            <summary>
            类型判断 true = and, false = any
            </summary>
        </member>
        <member name="M:Swell.Core.TypeTool.IsAll``7(System.Object)">
            <summary>
            类型判断
            </summary>
        </member>
        <member name="M:Swell.Core.TypeTool.IsAny``7(System.Object)">
            <summary>
            类型判断
            </summary>
        </member>
        <member name="M:Swell.Core.TypeTool.Is``7(System.Object,System.Boolean)">
            <summary>
            类型判断 true = and, false = any
            </summary>
        </member>
        <member name="M:Swell.Core.TypeTool.IsAll``8(System.Object)">
            <summary>
            类型判断
            </summary>
        </member>
        <member name="M:Swell.Core.TypeTool.IsAny``8(System.Object)">
            <summary>
            类型判断
            </summary>
        </member>
        <member name="M:Swell.Core.TypeTool.Is``8(System.Object,System.Boolean)">
            <summary>
            类型判断 true = and, false = any
            </summary>
        </member>
        <member name="M:Swell.Core.TypeTool.IsAll``9(System.Object)">
            <summary>
            类型判断
            </summary>
        </member>
        <member name="M:Swell.Core.TypeTool.IsAny``9(System.Object)">
            <summary>
            类型判断
            </summary>
        </member>
        <member name="M:Swell.Core.TypeTool.Is``9(System.Object,System.Boolean)">
            <summary>
            类型判断 true = and, false = any
            </summary>
        </member>
        <member name="M:Swell.Core.TypeTool.IsAll``10(System.Object)">
            <summary>
            类型判断
            </summary>
        </member>
        <member name="M:Swell.Core.TypeTool.IsAny``10(System.Object)">
            <summary>
            类型判断
            </summary>
        </member>
        <member name="M:Swell.Core.TypeTool.Is``10(System.Object,System.Boolean)">
            <summary>
            类型判断 true = and, false = any
            </summary>
        </member>
        <member name="M:Swell.Core.TypeTool.IsAll``11(System.Object)">
            <summary>
            类型判断
            </summary>
        </member>
        <member name="M:Swell.Core.TypeTool.IsAny``11(System.Object)">
            <summary>
            类型判断
            </summary>
        </member>
        <member name="M:Swell.Core.TypeTool.Is``11(System.Object,System.Boolean)">
            <summary>
            类型判断 true = and, false = any
            </summary>
        </member>
        <member name="M:Swell.Core.TypeTool.IsAll``12(System.Object)">
            <summary>
            类型判断
            </summary>
        </member>
        <member name="M:Swell.Core.TypeTool.IsAny``12(System.Object)">
            <summary>
            类型判断
            </summary>
        </member>
        <member name="M:Swell.Core.TypeTool.Is``12(System.Object,System.Boolean)">
            <summary>
            类型判断 true = and, false = any
            </summary>
        </member>
        <member name="M:Swell.Core.TypeTool.IsAll``13(System.Object)">
            <summary>
            类型判断
            </summary>
        </member>
        <member name="M:Swell.Core.TypeTool.IsAny``13(System.Object)">
            <summary>
            类型判断
            </summary>
        </member>
        <member name="M:Swell.Core.TypeTool.Is``13(System.Object,System.Boolean)">
            <summary>
            类型判断 true = and, false = any
            </summary>
        </member>
        <member name="M:Swell.Core.TypeTool.IsAll``14(System.Object)">
            <summary>
            类型判断
            </summary>
        </member>
        <member name="M:Swell.Core.TypeTool.IsAny``14(System.Object)">
            <summary>
            类型判断
            </summary>
        </member>
        <member name="M:Swell.Core.TypeTool.Is``14(System.Object,System.Boolean)">
            <summary>
            类型判断 true = and, false = any
            </summary>
        </member>
        <member name="M:Swell.Core.TypeTool.IsKeyType(System.Type)">
            <summary>
            判断是否关键字类型（不包括object）
            </summary>
        </member>
        <member name="M:Swell.Core.TypeTool.IsKeyType(System.Object)">
            <summary>
            判断是否关键字类型（不包括object）
            </summary>
        </member>
        <member name="M:Swell.Core.TypeTool.IsBaseType(System.Type)">
            <summary>
            判断是否基本数据类型（不包括object）
            </summary>
        </member>
        <member name="M:Swell.Core.TypeTool.IsBaseType(System.Object)">
            <summary>
            判断是否基本数据类型（不包括object）
            </summary>
        </member>
        <member name="T:Swell.Data.EDataParameter">
            <summary>
            
            </summary>
        </member>
        <member name="F:Swell.Data.EDataParameter.PARAMETER_NAME_PREFIX">
            <summary>
            ParameterName的前缀
            </summary>
        </member>
        <member name="M:Swell.Data.EDataParameter.GetComparisonOperator(System.Data.IDataParameter)">
            <summary>
            在SourceColumn获取比较运算符
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.Data.EDataParameter.Copy``1(``0,System.Data.IDataParameter)">
            <summary>
            从 from（DbType, Direction, ParameterName, SourceColumn, Value）复制到 to
            </summary>
            <typeparam name="T"></typeparam>
            <param name="to">到</param>
            <param name="from">从</param>
            <returns>to</returns> 
        </member>
        <member name="M:Swell.Data.EDataParameter.Clone``1(``0,``0)">
            <summary>
            从 from（DbType, Direction, ParameterName, SourceColumn, Value）克隆到 to 。 并且可能改变值
            </summary>
            <typeparam name="T"></typeparam>
            <param name="to">到</param>
            <param name="from">从</param>
            <returns>to</returns> 
        </member>
        <member name="M:Swell.Data.EDataParameter.Add``1(System.Collections.Generic.ICollection{``0},System.String,System.Object,System.String,System.Data.ParameterDirection)">
            <summary>
            添加
            </summary>
            <typeparam name="T"></typeparam>
            <param name="collection"></param>
            <param name="parameterName">参数名</param>
            <param name="value">值</param>
            <param name="sourceColumn">FieldName Comparer | 字段名 比较运算符</param>
            <param name="direction">方向</param>
            <returns>返回已经添加到集合里</returns>
        </member>
        <member name="M:Swell.Data.EDataParameter.remove_by_parameter_name``1(``0,System.String,System.Boolean)">
            <summary>
            移除匹配parameterName
            </summary>
            <param name="param"></param>
            <param name="parameterName"></param>
            <param name="ignoreCase">是否区分大小写</param>
            <returns></returns>
        </member>
        <member name="M:Swell.Data.EDataParameter.RemoveByParameterName``1(System.Collections.Generic.ICollection{``0},System.String,System.Boolean)">
            <summary>
            移除匹配parameterName
            </summary>
            <typeparam name="T"></typeparam>
            <param name="collection"></param>
            <param name="parameterName"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.Data.EDataParameter.remove_by_value``1(``0,System.Object)">
            <summary> 移除匹配的值
            </summary>
            <typeparam name="T"></typeparam>
            <param name="param"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.Data.EDataParameter.RemoveByValue``1(System.Collections.Generic.ICollection{``0},System.Object)">
            <summary> 移除匹配的值
            </summary>
            <typeparam name="T"></typeparam>
            <param name="collection"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="P:Swell.Data.EDataParameter.ParameterNamePrefix">
            <summary>
            ParameterName的前缀
            </summary>
        </member>
        <member name="T:Swell.Data.CommonSql">
            <summary>
            
            </summary>
        </member>
        <member name="F:Swell.Data.CommonSql.DEFAULT_PARAMETER_NAME_PREFIX">
            <summary> 默认的参数名的前缀
            </summary>
        </member>
        <member name="M:Swell.Data.CommonSql.GetFieldName``1(``0)">
            <summary>获取字段名</summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.Data.CommonSql.FormatSqlValue``1(``0)">
            <summary>格式化Sql的值
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.Data.CommonSql.GetParameterName``1(``0)">
            <summary>获取ParameterName</summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.Data.CommonSql.GetParameterValue(System.Data.IDataParameter)">
            <summary></summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.Data.CommonSql.BuildParameterValue(System.Data.IDataParameter)">
            <summary></summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.Data.CommonSql.GetSetSql``1(``0)">
            <summary></summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.Data.CommonSql.BuildSetSql``1(``0)">
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.Data.CommonSql.ConditionSqlSort(System.Data.IDataParameter,System.Data.IDataParameter)">
            <summary>
            条件Sql排序规则
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.Data.CommonSql.ConditionSql(System.Data.IDataParameter,System.Func{System.Data.IDataParameter,System.Object})">
            <summary>
            
            </summary>
            <param name="param"></param>
            <param name="func">value值生成的方法</param>
            <returns></returns>
        </member>
        <member name="M:Swell.Data.CommonSql.ConditionSql(System.Collections.Generic.IEnumerable{System.Data.IDataParameter},System.Func{System.Data.IDataParameter,System.Object})">
            <summary>
            
            </summary>
            <param name="args"></param>
            <param name="func"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.Data.CommonSql.ConditionSql(System.Collections.Generic.IEnumerable{System.Data.IDataParameter},System.Func{System.Data.IDataParameter,System.Object},System.Func{System.Data.IDataParameter,System.Data.IDataParameter,System.Int32})">
            <summary>
            
            </summary>
            <param name="args"></param>
            <param name="func">生成的方法</param>
            <param name="sort">排序规则</param>
            <returns></returns>
        </member>
        <member name="M:Swell.Data.CommonSql.ConditionSql(System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{System.Data.IDataParameter}},System.Func{System.Collections.Generic.IEnumerable{System.Data.IDataParameter},System.Object})">
            <summary>
            
            </summary>
            <param name="args"></param>
            <param name="func"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.Data.CommonSql.InsertSql(System.Collections.Generic.IEnumerable{System.Data.IDataParameter},System.String,System.Func{System.Data.IDataParameter,System.Object})">
            <summary>
            
            </summary>
            <param name="args"></param>
            <param name="table_name"></param>
            <param name="func"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.Data.CommonSql.UpdateSql(System.Collections.Generic.IEnumerable{System.Data.IDataParameter},System.Collections.Generic.IEnumerable{System.Data.IDataParameter},System.String,System.Func{System.Data.IDataParameter,System.Object},System.Func{System.Collections.Generic.IEnumerable{System.Data.IDataParameter},System.String})">
            <summary>
            
            </summary>
            <param name="args"></param>
            <param name="where"></param>
            <param name="table_name"></param>
            <param name="func_args"></param>
            <param name="func_where"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.Data.CommonSql.DeleteSql(System.Collections.Generic.IEnumerable{System.Data.IDataParameter},System.String,System.Func{System.Collections.Generic.IEnumerable{System.Data.IDataParameter},System.String})">
            <summary>
            
            </summary>
            <param name="args"></param>
            <param name="table_name"></param>
            <param name="func"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.Data.CommonSql.SelectSql(System.Collections.Generic.IEnumerable{System.Data.IDataParameter},System.String,System.Func{System.Collections.Generic.IEnumerable{System.Data.IDataParameter},System.String},System.String)">
            <summary>
            构建查询的SQL
            </summary>
            <param name="args">查询条件</param>
            <param name="table_name">表名</param>
            <param name="func">生成查询条件的方式</param>
            <param name="fieldname">查询的字段名(如果是String.Empty || null 就是 *)</param>
            <returns>SELECT语句</returns>
        </member>
        <member name="M:Swell.Data.CommonSql.GetConditionSql(System.Data.IDataParameter)">
            <summary>
            
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.Data.CommonSql.GetConditionSql(System.Collections.Generic.IEnumerable{System.Data.IDataParameter})">
            <summary>
            AND
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.Data.CommonSql.GetConditionSql(System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{System.Data.IDataParameter}})">
            <summary>
            OR
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.Data.CommonSql.BuildConditionSql(System.Data.IDataParameter)">
            <summary>
            
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.Data.CommonSql.BuildConditionSql(System.Collections.Generic.IEnumerable{System.Data.IDataParameter})">
            <summary>
            AND
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.Data.CommonSql.BuildConditionSql(System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{System.Data.IDataParameter}})">
            <summary>
            OR
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:Swell.WebForm.ControlTool">
            <summary>
            
            </summary>
        </member>
        <member name="F:Swell.WebForm.ControlTool.DATA_FIELDNAME">
            <summary>
            data-fieldname
            </summary>
        </member>
        <member name="F:Swell.WebForm.ControlTool.DATA_DB_TYPE">
            <summary>
            
            </summary>
        </member>
        <member name="M:Swell.WebForm.ControlTool.initialize_parameter(System.Data.IDataParameter,System.String,System.Object,System.String)">
            <summary> 初始化参数
            </summary>
            <param name="param"></param>
            <param name="parameterName"></param>
            <param name="value"></param>
            <param name="sourceColumn"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.WebForm.ControlTool.DbType``1(System.Web.UI.Control,``0)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="control"></param>
            <param name="temp"></param>
        </member>
        <member name="M:Swell.WebForm.ControlTool.GetValue(System.Web.UI.Control)">
            <summary> 获取值
            </summary>
            <param name="control"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.WebForm.ControlTool.create_parameter``1(System.Web.UI.Control,System.Char,System.Func{``0})">
            <summary> 
            </summary>
            <param name="control"></param>
            <param name="paramNamePrefix"></param>
            <param name="func"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.WebForm.ControlTool.CreateParameters``1(System.Web.UI.Control,System.Char,System.Func{System.Web.UI.Control,``0,``0},System.Int32)">
            <summary> 创建Parameter
            </summary>
            <typeparam name="T">创建的类型</typeparam>
            <param name="control"></param>
            <param name="paramNamePrefix">参数名称的前缀</param>
            <param name="check_param">检查参数是否需要</param>
            <param name="maxLevel">最大深度</param>
            <returns></returns>
        </member>
        <member name="M:Swell.WebForm.ControlTool.CreateDataParameters(System.Web.UI.Control,System.Char,System.Func{System.Web.UI.Control,Swell.Data.DataParameter,Swell.Data.DataParameter},System.Int32)">
            <summary> 
            </summary>
            <param name="control"></param>
            <param name="paramNamePrefix"></param>
            <param name="func"></param>
            <param name="maxLevel"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.WebForm.ControlTool.create_parameters``1(System.Web.UI.Control,System.Char,System.Collections.Generic.List{``0},System.Int32,System.Int32,System.Func{``0},System.Func{System.Web.UI.Control,``0,``0})">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="control"></param>
            <param name="paramNamePrefix">参数名称的前缀</param>
            <param name="list"></param>
            <param name="currentLevel"></param>
            <param name="maxLevel"></param>
            <param name="create_param"></param>
            <param name="check_param"></param>
        </member>
        <member name="M:Swell.WebForm.ControlTool.DefaultCheckParameter``1(System.Web.UI.Control,``0)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="control"></param>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.WebForm.ControlTool.GetDataFieldName(System.Web.UI.Control)">
            <summary>
            (control as IAttributeAccessor).GetAttribute(DATA_FIELDNAME)
            </summary>
            <param name="control"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.WebForm.ControlTool.get_field_name(System.Web.UI.Control)">
            <summary> 获取字段名
            </summary>
            <param name="control"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.WebForm.ControlTool.SetDataFieldName(System.Web.UI.Control,System.String)">
            <summary>
            attribute.SetAttribute(DATA_FIELDNAME, value);
            </summary>
            <param name="control"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Swell.WebForm.ControlTool.FillData(System.Web.UI.Control,System.Data.DataRow,System.Action{System.Web.UI.Control,System.String,System.Object},System.Int32)">
            <summary> 填充数据（包括当前控件）
            </summary>
            <param name="control"></param>
            <param name="row">数据行</param>
            <param name="after_action">回调函数</param>
            <param name="maxLevel">递归的深度</param>
        </member>
        <member name="M:Swell.WebForm.ControlTool.FillData(System.Web.UI.Control,System.Data.DataTable,System.Int32,System.Action{System.Web.UI.Control,System.String,System.Object},System.Int32)">
            <summary> 填充数据（包括当前控件）
            </summary>
            <param name="control"></param>
            <param name="table">数据表</param>
            <param name="rowIndex">行索引</param>
            <param name="after_action">回调函数</param>
            <param name="maxLevel">递归的深度</param>
        </member>
        <member name="M:Swell.WebForm.ControlTool.fill_data(System.Web.UI.Control,System.Data.DataRow,System.Action{System.Web.UI.Control,System.String,System.Object},System.Int32,System.Int32)">
            <summary> 填充数据（包括当前控件）
            </summary>
            <param name="control"></param>
            <param name="row"></param>
            <param name="after_action"></param>
            <param name="currentLevel"></param>
            <param name="maxLevel"></param>
        </member>
        <member name="M:Swell.WebForm.ControlTool.fill_data(System.Web.UI.Control,System.String,System.Object)">
            <summary> 
            </summary>
            <param name="control"></param>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="T:Swell.WebForm.EDropDownList">
            <summary>
            
            </summary>
        </member>
        <member name="T:Swell.WebForm.EListItemCollection">
            <summary>
            
            </summary>
        </member>
        <member name="M:Swell.WebForm.EListItemCollection.Add(System.Web.UI.WebControls.ListItemCollection,System.Object)">
            <summary> 
            </summary>
            <param name="lic"></param>
            <param name="arg"></param>
        </member>
        <member name="M:Swell.WebForm.EListItemCollection.Add(System.Web.UI.WebControls.ListItemCollection,System.Object,System.Object)">
            <summary>
            添加ListItem ----- new ListItem() { Text = text, Value = value }
            </summary>
            <param name="lic"></param>
            <param name="text"></param>
            <param name="value"></param>
        </member>
        <member name="M:Swell.WebForm.EListItemCollection.AddRange``1(System.Web.UI.WebControls.ListItemCollection,System.Collections.Generic.IEnumerable{``0})">
            <summary>
            item是Text也是Value
            </summary>
            <param name="lic"></param>
            <param name="args"></param>
        </member>
        <member name="M:Swell.WebForm.EListItemCollection.AddRange``2(System.Web.UI.WebControls.ListItemCollection,System.Collections.Generic.Dictionary{``0,``1})">
            <summary>
            Key=Text, Value=Value
            </summary>
            <typeparam name="Key"></typeparam>
            <typeparam name="Value"></typeparam>
            <param name="lic"></param>
            <param name="dic"></param>
        </member>
    </members>
</doc>
